name: Angle wheels

on:
  push:
    paths:
      - 'win/angle.py'
      - '.github/workflows/windows_angle_wheels.yml'
      - 'ci/windows_ci.ps1'

env:
  SERVER_IP: '159.203.106.198'
  KIVY_BUILD_DIR: kivy_build
  KIVY_BUILD_CACHE: kivy_build_cache
  PACKAGE_TARGET: angle
  PYTHONPATH: .

jobs:
  prepare_angle:
    runs-on: windows-latest
    env:
      DEPOT_TOOLS_WIN_TOOLCHAIN: 0
    steps:
      - name: Download depot_tools
        run: |
          Invoke-WebRequest -Uri "https://storage.googleapis.com/chrome-infra/depot_tools.zip" -OutFile depot_tools.zip
          7z x depot_tools.zip -odepot_tools
      - name: Build Angle
        run: |
          $env:PATH="$(python -c "import os; print(';'.join([p for p in os.environ['PATH'].split(';') if 'Python' not in p and 'python' not in p]))")"
          $env:PATH="$(pwd)\depot_tools;$env:PATH"
          $env:PYTHON_HOME=""
          gclient
          git clone https://chromium.googlesource.com/angle/angle
          cd angle
          python scripts/bootstrap.py
          gclient sync
          git checkout master

          call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\Common7\Tools\VsDevCmd.bat"
          gn gen out/Release_x86 --args='is_debug=false target_cpu="x86"'
          autoninja -C out\Release_x86 libEGL
          autoninja -C out\Release_x86 libGLESv2

          gn gen out/Release_x64 --args='is_debug=false target_cpu="x64"'
          autoninja -C out\Release_x64 libEGL
          autoninja -C out\Release_x64 libGLESv2

          dir out\Release_x64
          dir out\Release_x86


  windows_wheels:
    runs-on: windows-latest
    needs: prepare_angle
    strategy:
      matrix:
        python: [ '3.5', '3.6', '3.7', '3.8' ]
        arch: ['x64', 'x86']
    env:
      PACKAGE_ARCH: ${{ matrix.arch }}
    steps:
    - uses: actions/checkout@v1
    - name: Set up Python
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python }}
        architecture: ${{ matrix.arch }}
    - name: Cache deps
      uses: actions/cache@v1
      with:
        path: kivy_build_cache
        key: cache-packages-angle-${{ matrix.arch }}-${{ hashFiles('win/angle.py') }}
    - name: Prepare Environment
      run: |
        . .\ci\windows_ci.ps1
        Prepre-env
    - name: Build package
      run: |
        . .\ci\windows_ci.ps1
        Create-Packages
    - name: Install MSYS2
      run: choco install msys2
    - name: Upload wheels to server
      if: contains(github.event.head_commit.message, '[publish angle win]')
      env:
        UBUNTU_UPLOAD_KEY: ${{ secrets.UBUNTU_UPLOAD_KEY }}
        MSYSTEM: MINGW64
        CHERE_INVOKING: 1
      run: |
        . .\ci\windows_ci.ps1
        Upload-windows-wheels-to-server -ip "$env:SERVER_IP"
    - name: Upload wheels as artifact
      uses: actions/upload-artifact@master
      with:
        name: angle_wheels
        path: dist
    - name: Publish to PyPI
      if: contains(github.event.head_commit.message, '[publish angle win]')
      uses: pypa/gh-action-pypi-publish@master
      with:
        user: __token__
        password: ${{ secrets.pypi_password }}
